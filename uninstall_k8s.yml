---
- name: Uninstall Kubernetes Components
  hosts: all
  become: true
  vars:
    # Docker를 사용하는 경우 True로 설정
    use_docker: false
  tasks:
    # 1. Kubernetes 서비스 중지 및 비활성화
    # - name: Stop kubelet service
    #   ansible.builtin.systemd:
    #     name: kubelet
    #     state: stopped
    #     enabled: no

    - name: Stop Docker service (if using Docker)
      ansible.builtin.systemd:
        name: docker
        state: stopped
        enabled: no
      when: use_docker

    - name: Unhold Kubernetes packages
      ansible.builtin.command: apt-mark unhold kubeadm kubectl kubelet


    # 2. Kubernetes 패키지 제거
    - name: Remove Kubernetes packages on Debian-based systems
      ansible.builtin.apt:
        name:
          - kubeadm
          - kubectl
          - kubelet
          - kubernetes-cni
          - kubernetes-kubelet
          - kubernetes-kubectl
          - kubernetes-admin
        state: absent
        purge: yes
        autoremove: yes

    # 4. 관련 설정 파일 및 디렉토리 삭제
    - name: Remove Kubernetes directories
      ansible.builtin.command: "rm -rf {{ item }}"
      loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/kubeadm
        - /var/lib/etcd
        - /etc/systemd/system/kubelet.service.d
        - /etc/cni
        - /opt/cni
        - /var/run/kubernetes
        - /var/log/containers
        - /var/log/pods
      ignore_errors: yes

    # 5. Docker 설정 정리 (선택 사항)
    - name: Remove Docker if not needed
      ansible.builtin.package:
        name: docker-ce
        state: absent
        purge: yes
      when:
        - use_docker

    # 6. 시스템 패키지 캐시 정리 (Debian 기반)
    - name: Clean apt cache on Debian-based systems
      ansible.builtin.apt:
        autoclean: yes
        autoremove: yes

    # 8. Docker 설정 파일 삭제 (선택 사항)
    - name: Remove Docker directories (if Docker was removed)
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
        recurse: yes
      loop:
        - /etc/docker
        - /var/lib/docker
        - /etc/systemd/system/docker.service.d
      when: use_docker
      ignore_errors: yes
